name: Terraform (deploy)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # REQUIRED for OIDC

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # OIDC login (no secrets)
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id:        ${{ vars.AZURE_CLIENT_ID }}
          tenant-id:        ${{ vars.AZURE_TENANT_ID }}
          subscription-id:  ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5
          terraform_wrapper: false

      # Init with OIDC env so backend uses SP token (NOT Azure CLI)
      - name: Terraform Init
        working-directory: infra/envs/dev
        env:
          ARM_CLIENT_ID:        ${{ vars.AZURE_CLIENT_ID }}
          ARM_TENANT_ID:        ${{ vars.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID:  ${{ vars.AZURE_SUBSCRIPTION_ID }}
          ARM_USE_OIDC:         "true"
        run: terraform init -backend-config=backend.hcl

      - name: Terraform Plan
        working-directory: infra/envs/dev
        env:
          ARM_CLIENT_ID:        ${{ vars.AZURE_CLIENT_ID }}
          ARM_TENANT_ID:        ${{ vars.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID:  ${{ vars.AZURE_SUBSCRIPTION_ID }}
          ARM_USE_OIDC:         "true"
        run: terraform plan -out=tfplan.bin

      - name: Terraform Apply
        working-directory: infra/envs/dev
        env:
          ARM_CLIENT_ID:        ${{ vars.AZURE_CLIENT_ID }}
          ARM_TENANT_ID:        ${{ vars.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID:  ${{ vars.AZURE_SUBSCRIPTION_ID }}
          ARM_USE_OIDC:         "true"
        run: terraform apply -auto-approve tfplan.bin
