name: Terraform (deploy)

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to deploy'
        required: true
        type: choice
        options: [dev]

jobs:
  plan-and-apply:
    runs-on: ubuntu-latest
    # You can keep the line below if you use GitHub Environments; it's fine.
    environment: ${{ inputs.env }}
    permissions:
      contents: read
      # id-token is NOT required for client secret auth, but leaving it doesn't hurt:
      id-token: write

    defaults:
      run:
        working-directory: infra/envs/${{ inputs.env }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Preflight to catch missing secrets early
      - name: Preflight: check required secrets
        run: |
          [ -n "${{ secrets.AZURE_TENANT_ID }}" ] || (echo "Missing AZURE_TENANT_ID" && exit 1)
          [ -n "${{ secrets.AZURE_SUBSCRIPTION_ID }}" ] || (echo "Missing AZURE_SUBSCRIPTION_ID" && exit 1)
          [ -n "${{ secrets.AZURE_CLIENT_ID }}" ] || (echo "Missing AZURE_CLIENT_ID" && exit 1)
          [ -n "${{ secrets.AZURE_CLIENT_SECRET }}" ] || (echo "Missing AZURE_CLIENT_SECRET" && exit 1)

      - name: Azure login (client secret)
        uses: azure/login@v2
        with:
          client-id:        ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:        ${{ secrets.AZURE_TENANT_ID }}
          subscription-id:  ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret:    ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5
          terraform_wrapper: false

      - name: Terraform init (remote state)
        run: terraform init -backend-config=backend.hcl

      - name: Terraform plan
        run: terraform plan -out=tfplan.bin

      - name: Terraform apply (publish)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: terraform apply -auto-approve tfplan.bin
