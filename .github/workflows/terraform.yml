name: Terraform (deploy)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # REQUIRED for OIDC

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Optional: sanity checks to avoid SP mode
      - name: Preflight (OIDC)
        shell: bash
        run: |
          set -euo pipefail
          [ -n "${{ vars.AZURE_CLIENT_ID }}" ] || { echo "Missing vars.AZURE_CLIENT_ID"; exit 1; }
          [ -n "${{ vars.AZURE_TENANT_ID }}" ] || { echo "Missing vars.AZURE_TENANT_ID"; exit 1; }
          [ -n "${{ vars.AZURE_SUBSCRIPTION_ID }}" ] || { echo "Missing vars.AZURE_SUBSCRIPTION_ID"; exit 1; }
          # Ensure weâ€™re not accidentally using SP creds:
          [ -z "${{ secrets.AZURE_CREDENTIALS }}" ] || { echo "Remove AZURE_CREDENTIALS secret for OIDC"; exit 1; }
          [ -z "${{ secrets.AZURE_CLIENT_SECRET }}" ] || { echo "Remove AZURE_CLIENT_SECRET secret for OIDC"; exit 1; }

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id:        ${{ vars.AZURE_CLIENT_ID }}
          tenant-id:        ${{ vars.AZURE_TENANT_ID }}
          subscription-id:  ${{ vars.AZURE_SUBSCRIPTION_ID }}
          # NOTE: no 'auth-type', no 'creds', no 'client-secret'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5
          terraform_wrapper: false

      - name: Terraform Init / Plan / Apply
        shell: bash
        run: |
          set -euo pipefail
          cd infra/envs/dev
          terraform init -backend-config=backend.hcl
          terraform plan -out=tfplan.bin
          terraform apply -auto-approve tfplan.bin
